include "mapbasic.def"

declare sub  main
declare sub dial
declare sub execute



dim nom_table,tab(255),nom_ref as string

sub main
alter menu "O&utils" add "Geocodage Allegro" calling dial
alter menu bar add "O&utils"
end sub


sub dial
dim i,id_ref,id_tab as integer

for i=1 to 255
if i<=numtables() then
tab(i)=tableinfo(i,TAB_INFO_NAME)
else
tab(i)=""
end if
next

dialog
title "geocodage"

control statictext
position  10,10
title "table evenements"

control popupmenu
position 70,10
title from variable tab
into id_tab

control statictext
position  10,35
title "reseau reference"

control popupmenu
position 70,35
title from variable tab
into id_ref


control okbutton

control cancelbutton

if commandinfo(CMD_INFO_DLG_OK)=true then
nom_ref=tableinfo(id_ref,TAB_INFO_NAME)
nom_table=tableinfo(id_tab,TAB_INFO_NAME)
call execute
end if
end sub

sub execute
dim i ,n,sens,pk,pm,s1,s2,j,npts as integer
dim route,arc as string
dim pr,pro,prd,d,l,x,y ,x1,y1,xp,yp,delta as float
dim objet as object

set coordsys table nom_ref

select * from nom_table into locevt noselect
fetch first from locevt
n=tableinfo(locevt,TAB_INFO_NROWS)

for i=1 to n
fetch rec i from nom_table
if locevt.id_brt<>"" then
	route=locevt.id_brt
else
	route=locevt.id_route
end if
	pr=locevt.prkd+0.0001*locevt.prmd
	pk=locevt.prkd
	pm=locevt.prmd
	sens=locevt.sens
s2=0
select * from nom_ref where id_route=route and type_de_direction=sens and  pr between PRK_début+0.0001*PRM_début and prk_fin+0.0001*prm_fin into sens1
s1=tableinfo(sens1,TAB_INFO_NROWS)

if s1=0 then
select * from nom_ref where id_route=route and type_de_direction=sens and  pr between prk_fin+0.0001*prm_fin and PRK_début+0.0001*PRM_début into sens2
s2=tableinfo(sens2,TAB_INFO_NROWS)
end if

'print locevt.id+" "+s1+" "+s2

if s1>0 then
'fetch first from sens1
pro=sens1.PRK_début+0.0001*sens1.PRM_début
prd=sens1.PRK_fin+0.0001*sens1.PRM_fin
arc=sens1.arc_id
'print "1 " + pro+" "+prd+" " +pr
	if pr-pro>prd-pr then
	objet=sens1.obj
	d=round(prd,1)*1000+(prd-round(prd,1))*10000-(round(pr,1)*1000+(pr-round(pr,1))*10000)

	l=0
	npts=objectinfo(objet,OBJ_INFO_NPOLYGONS+1)
	x=objectnodex(objet,1,npts)
	y=objectnodey(objet,1,npts)
	xp=0
	yp=0

	for j=npts-1 to 1 step -1

	x1=objectnodex(objet,1,j)
	y1=objectnodey(objet,1,j)
	delta=((x1-x)^2+(y1-y)^2)^0.5
	l=l+delta

	if l>=d then
	
	xp=x1+((l-d)/delta)*(x-x1)
	yp=y1+((l-d)/delta)*(y-y1)
	update locevt set obj=createpoint(xp,yp),id_arc=arc where rowid=i
	goto fin
	end if
	
	x=x1
	y=y1
	
	next
	
	
	



	elseif pr-pro<=prd-pr then
	objet=sens1.obj
	d=-round(pro,1)*1000-(pro-round(pro,1))*10000+(round(pr,1)*1000+(pr-round(pr,1))*10000)

	l=0
	npts=objectinfo(objet,OBJ_INFO_NPOLYGONS+1)
	x=objectnodex(objet,1,1)
	y=objectnodey(objet,1,1)
	xp=0
	yp=0
	for j=2 to npts 

	x1=objectnodex(objet,1,j)
	y1=objectnodey(objet,1,j)
	delta=((x1-x)^2+(y1-y)^2)^0.5
	l=l+delta

	if l>=d then
	xp=x1+((l-d)/delta)*(x-x1)
	yp=y1+((l-d)/delta)*(y-y1)
	update locevt set obj=createpoint(xp,yp),id_arc=arc where rowid=i
	goto fin
	end if
	
	x=x1
	y=y1
	next
	
	
	end if




elseif  s2>0 then
'fetch first from sens2
pro=sens2.PRK_début+0.0001*sens2.PRM_début
prd=sens2.PRK_fin+0.0001*sens2.PRM_fin
arc=sens2.arc_id
'print "2 " + pro+" "+prd+" " +pr
	if pro-pr>pr-prd then
	objet=sens2.obj
	d=-round(prd,1)*1000-(prd-round(prd,1))*10000+(round(pr,1)*1000+(pr-round(pr,1))*10000)

	l=0
	npts=objectinfo(objet,OBJ_INFO_NPOLYGONS+1)
	x=objectnodex(objet,1,npts)
	y=objectnodey(objet,1,npts)
	xp=0
	yp=0
	for j=npts-1 to 1 step -1

	x1=objectnodex(objet,1,j)
	y1=objectnodey(objet,1,j)
	delta=((x1-x)^2+(y1-y)^2)^0.5
	l=l+delta

	if l>=d then
	xp=x1+((l-d)/delta)*(x-x1)
	yp=y1+((l-d)/delta)*(y-y1)

	update locevt set obj=createpoint(xp,yp),id_arc=arc where rowid=i
	goto fin
	end if
	
	x=x1
	y=y1
	
	next
	
	



	elseif pro-pr<=pr-prd then
	objet=sens2.obj
	d=round(pro,1)*1000+(pro-round(pro,1))*10000-(round(pr,1)*1000+(pr-round(pr,1))*10000)

	l=0
	npts=objectinfo(objet,OBJ_INFO_NPOLYGONS+1)
	x=objectnodex(objet,1,1)
	y=objectnodey(objet,1,1)
	xp=0
	yp=0
	for j=2 to npts 

	x1=objectnodex(objet,1,j)
	y1=objectnodey(objet,1,j)
	delta=((x1-x)^2+(y1-y)^2)^0.5
	l=l+delta

	if l>=d then
	xp=x1+((l-d)/delta)*(x-x1)
	yp=y1+((l-d)/delta)*(y-y1)
	update locevt set obj=createpoint(xp,yp),id_arc=arc where rowid=i
	goto fin
	end if
	
	x=x1
	y=y1
	next
	
	
	end if

end if








fin:
next
end sub